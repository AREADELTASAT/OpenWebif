#from Plugins.Extensions.OpenWebif.local import tstrings

<style>
  #atlist .ui-selecting { background: #FECA40; }
  #atlist .ui-selected { background: #F39814; color: white; }
  #atlist { list-style-type: none; margin: 0; padding: 0; }
  #atlist li { margin: 3px; padding: 0.4em; font-size: 1.4em; height: 18px; }

fieldset > label
{
	-webkit-margin-top-collapse: separate;
	margin-top: 1.5em;
	display: inline-block;
}
</style>


<div id="content_main" style="min-height: 500px;">
	<div id="info">
		<h3>AutoTimer</h3>

		<div id="toolbar-header">
			<span id="toolbar">
				<span id="atbuttons">
					<button id="atbutton0" onclick="addAT(); return false">ADD</button>
					<button id="atbutton1" onclick="parseAT(); return false">PARSE</button>
				</span>
			</span>
		</div>

		<div style="height: 640px; overflow: auto; background-color: #00000">
		
		<div style="display: inline-block; width: 100%; zoom: 1;">
			<div style="float:left;width:200px;">
				<h3>AutoTimer List</h3>
				<ol id="atlist">
				</ol>
				
			</div>
			<div style="margin-left:200px;">
				<div style="display: inline-block; width: 100%; zoom: 1;">
					<h3>AutoTimer Edit <span id='at_name'></span>></h3>
					<div id="ateditcontent">
						<form>
							<fieldset>
								<br><label for="enabled">Enabled:</label>
								<input type="checkbox" name="enabled" id="enabled" value="" class="checkbox ui-widget-content ui-corner-all">
								<label for="name">$tstrings['name']:</label>
								<input type="text" name="name" id="name" class="text ui-widget-content ui-corner-all">
								<label for="match">Match:</label>
								<input type="text" name="match" id="match" class="text ui-widget-content ui-corner-all">
								<br><label for="encoding">Encoding:</label>
								<select name="encoding" id="encoding">
								<option value="ISO8859-15" selected="selected">ISO8859-15</option>
								<option value="UTF-8">UTF-8</option>
								</select>
								<label for="searchType">Search type:</label>
								<select name="searchType" id="searchType">
								<option value="partical" selected="selected">partical match</option>
								<option value="exact">exact match</option>
								<option value="title">title match</option>
								</select>
								<label for="searchCase">Search case:</label>
								<select name="searchCase" id="searchCase">
								<option value="sensitive" selected="selected">Case sensitive</option>
								<option value="insensitive">Case insensitive</option>
								</select>
								<br><label for="justplay">Timer type:</label>
								<select name="justplay" id="justplay">
								<option value="0" selected="selected">Record</option>
								<option value="1">Zap</option>
								</select>
								<br><label for="overrideAlternatives">Override alternatives:</label>
								<input type="checkbox" name="overrideAlternatives" id="overrideAlternatives" value="" class="checkbox ui-widget-content ui-corner-all">
								<br><label for="timeSpan">TimeSpan:</label>
								<input type="checkbox" name="timeSpan" id="timeSpan" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="timeSpanE">
									<label for="from">Begin:</label>
									<input type="text" name="from" id="from" value="" class="text ui-widget-content ui-corner-all">
									<label for="to">End:</label>
									<input type="text" name="to" id="to" value="" class="text ui-widget-content ui-corner-all">
									</span>
								<br><label for="timeFrame">TimeFrame:</label>
								<input type="checkbox" name="timeFrame" id="timeFrame" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="timeFrameE">
									<label for="after">After:</label>
									<input type="text" name="after" id="after" value="" class="text date ui-widget-content ui-corner-all">
									<label for="before">Before:</label>
									<input type="text" name="before" id="before" value="" class="text date ui-widget-content ui-corner-all">
									</span>
								<br><label for="timerOffset">Timer offset:</label>
								<input type="checkbox" name="timerOffset" id="timerOffset" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="timerOffsetE">
									<label for="obefore">Before:</label>
									<select name="obefore" id="obefore">
									</select>
									<label for="oafter">After:</label>
									<select name="oafter" id="oafter">
									</select>
									</span>
								
								<br><label for="maxDuration">Max duration:</label>
								<input type="checkbox" name="maxDuration" id="maxDuration" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="maxDurationE">
									<label for="maxduration"></label>
									<select name="maxduration" id="maxduration">
									</select>
									</span>
								
								<br><label for="afterevent">After event:</label>
								<select name="afterevent" id="afterevent">
								<option value="" selected="selected">Default</option>
								<option value="none">Nothing</option>
								<option value="standby">Standby</option>
								<option value="shutdown">Deep Standby</option>
								<option value="auto">Auto</option>
								</select>
								
								<label for="timeSpanAE">TimeSpan:</label>
								<input type="checkbox" name="timeSpanAE" id="timeSpanAE" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="timeSpanAEE">
									<label for="from">Begin:</label>
									<input type="text" name="aefrom" id="aefrom" value="" class="text ui-widget-content ui-corner-all">
									<label for="to">End:</label>
									<input type="text" name="aeto" id="aeto" value="" class="text ui-widget-content ui-corner-all">
									</span>
								
								
								<br><label for="counter">Max Counter:</label>
								<select name="counter" id="counter">
								</select>
								
								
								<br><label for="avoidDuplicateDescription">Avoid duplicate description:</label>
								<select name="avoidDuplicateDescription" id="avoidDuplicateDescription">
								<option value="0" selected="selected">No</option>
								<option value="1">On same service</option>
								<option value="2">On any service</option>
								<option value="3">any service/recording</option>
								</select>
								
								<br><label for="Location">Location:</label>
								<input type="checkbox" name="Location" id="Location" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="LocationE">
									<label for="location"></label>
									<select name="location" id="location">
										#for $location in $locations
											<option value="$location">$location</option>
										#end for
									</select>
									</span>
								<br><label for="Bouquets">Bouquets:</label>
								<input type="checkbox" name="Bouquets" id="Bouquets" value="" class="checkbox ui-widget-content ui-corner-all">
									<span id="BouquetsE">
									<label for="bouquets">BQ:</label>
									<select name="bouquets" id="bouquets">
										#for $bouquet in $bouquets
											<option value="$bouquet[0]">$bouquet[1]</option>
										#end for
									</select>
									</span>
							</fieldset>
						</form>
							<div id="errorbox" class="timerlist_row" style="color: red;">
		<div class="ui-state-error ui-corner-all" style="padding: 0 .7em;"> 
			<p><span class="ui-icon ui-icon-alert" style="float: left; margin-right: .3em;"></span> 
			<span id="error"></span>
		</div>
	</div>
						
					<span style="display: block;clear: both;"/>
			</div>
			</div>
		</div>
		
		</div>
	</div>
</div>


<script src="/js/jquery.timerpicker.js"></script>

<script type="text/javascript" src="/js/_at.js"></script>

<script type="text/javascript">

#raw

// TODO: finish form fields above
// TODO: finish at list selector and fill form fields
// TODO: fix / add checks
// TODO: add save / delete
// TODO: add parse / preview
// TODO: add backup / restore

// all JS code will me moved to at.js (see above) if finished

function initValues () {

var _sel1 = $('#oafter');
var _sel2 = $('#obefore');
var _sel3 = $('#maxduration');
var _sel4 = $('#counter');

for (x=0;x<100;x++)
{
	var sx=x.toString();
	if(x<10)
		sx='0'+sx;
	_sel1.append($('<option></option>').val(x).html(sx));
	_sel2.append($('<option></option>').val(x).html(sx));
	_sel4.append($('<option></option>').val(x).html(sx));
}

for (x=0;x<1000;x++)
{
	var sx=x.toString();
	if(x<10)
		sx='0'+sx;
	_sel3.append($('<option></option>').val(x).html(sx));
}
$('#oafter').val('5');
$('#obefore').val('5');
$('#maxduration').val('70');

var _dateb = new Date();
var _db = $.datepicker.formatDate('dd.mm.yy', _dateb);
$('#before').val(_db);

var _datea = new Date();
_datea.setDate(_dateb.getDate()+7);
var _da = $.datepicker.formatDate('dd.mm.yy', _datea);
$('#after').val(_da);

$('#from').val('20:15');
$('#to').val('23:15');

$('#aefrom').val('20:15');
$('#aeto').val('23:15');

$('#after').datepicker({
	
	closeText: tstr_done,
	monthNames: [tstr_january, tstr_february, tstr_march, tstr_april, tstr_may, tstr_june, tstr_july, tstr_august, tstr_september, tstr_october, tstr_november, tstr_december],
	dayNames: [tstr_sunday, tstr_monday, tstr_tuesday, tstr_wednesday, tstr_thursday, tstr_friday, tstr_saturday, tstr_sunday],
	dayNamesMin: [tstr_su, tstr_mo, tstr_tu, tstr_we, tstr_th, tstr_fr, tstr_sa, tstr_su],
	
	dateFormat: 'dd.mm.yy',
	onClose: function(dateText, inst) {
		if ($('#after').val() != '' &&
			$(this).datepicker('getDate') < $('#before').datepicker('getDate')) {
				$('#error').text(tstr_start_after_end);
				$('#errorbox').show();
		}
		else
			$('#errorbox').hide();
	}
});

$('#before').datepicker({
	
	closeText: tstr_done,
	monthNames: [tstr_january, tstr_february, tstr_march, tstr_april, tstr_may, tstr_june, tstr_july, tstr_august, tstr_september, tstr_october, tstr_november, tstr_december],
	dayNames: [tstr_sunday, tstr_monday, tstr_tuesday, tstr_wednesday, tstr_thursday, tstr_friday, tstr_saturday, tstr_sunday],
	dayNamesMin: [tstr_su, tstr_mo, tstr_tu, tstr_we, tstr_th, tstr_fr, tstr_sa, tstr_su],
	
	dateFormat: 'dd.mm.yy',
	onClose: function(dateText, inst) {
		if ($('#before').val() != '' &&
			$(this).datepicker('getDate') > $('#after').datepicker('getDate')) {
				$('#error').text(tstr_start_after_end);
				$('#errorbox').show();
		}
		else
			$('#errorbox').hide();
	}
});


$('.date').each(function(index,element){
	$('<span style="display: inline-block">').addClass('ui-icon ui-icon-calendar').insertAfter(element).position({
	of: element
	,my: 'right top'
	,at: 'right top+2'
	});
});

$('.time').each(function(index,element){
	$('<span style="display: inline-block">').addClass('ui-icon ui-icon-clock').insertAfter(element).position({
	of: element
	,my: 'right top'
	,at: 'right top+2'
	});
});

// TODO : other time/date picker fields

}

function checkValues () {

	if ($('#timeSpan').is(':checked') == true)
		$('#timeSpanE').show();
	else
		$('#timeSpanE').hide();

	if ($('#timeSpanAE').is(':checked') == true)
		$('#timeSpanAEE').show();
	else
		$('#timeSpanAEE').hide();

	if ($('#timeFrame').is(':checked') == true)
		$('#timeFrameE').show();
	else
		$('#timeFrameE').hide();

	if ($('#timerOffset').is(':checked') == true)
		$('#timerOffsetE').show();
	else
		$('#timerOffsetE').hide();

	if ($('#maxDuration').is(':checked') == true)
		$('#maxDurationE').show();
	else
		$('#maxDurationE').hide();

	if ($('#Location').is(':checked') == true)
		$('#LocationE').show();
	else
		$('#LocationE').hide();

}

$(document).ready(function() {

$('#timeSpan').click(function() { 
	checkValues();
});
$('#timeSpanAE').click(function() { 
	checkValues();
});
$('#timeFrame').click(function() { 
	checkValues();
});
$('#timerOffset').click(function() { 
	checkValues();
});
$('#maxDuration').click(function() { 
	checkValues();
});
$('#Location').click(function() { 
	checkValues();
});

initValues ();

checkValues();

//	<li class="ui-widget-content" data-atid=$at["id"] data-atjs="$at">$at["name"]</li>


// Fill List
$.ajax({
    type: "GET", url: "/autotimer",
    dataType: "xml",
    success: function (xml)
    {
    	atxml=xml;
    	Parse();
    },
    error: function (request, status, error) {
        alert(request.responseText);
    }
})


$( "#atlist" ).selectable({
	selected: function( event, ui ) {
		var ids = $('#atlist .ui-selected').map(function() {
			FillAT($(this).data('id'));
		});
	}
});

});

var atxml;

// parse and create AT List
function Parse() {
	
	$(atxml).find("timer").each(function () {
		$( "#atlist" ).append($('<li></li>').html($(this).attr("name")).addClass('ui-widget-content').data('id',$(this).attr("id")));
	});
}


// NOT finished
function FillAT(autotimerid)
{

	$(atxml).find("timer").each(function () {
		if($(this).attr("id")==autotimerid) {

			$('#enabled').prop('checked', ($(this).attr("enabled") == "yes")); 

	if($(this).attr("name"))
		$('#name').val($(this).attr("name"));
	else
		$('#name').val('')

	if($(this).attr("match"))
		$('#match').val($(this).attr("match"));
	else
		$('#match').val('')

	val="partical"
	if($(this).attr("searchType"))
		val=$(this).attr("searchType")
	$('#searchType').val(val)

	val="insensitive"
	if($(this).attr("searchCase"))
		val=$(this).attr("searchCase")
	$('#searchCase').val(val)

	val="0"
	if($(this).attr("justplay"))
		val=$(this).attr("justplay")
	$('#justplay').val(val)

	$('#overrideAlternatives').prop('checked', ($(this).attr("overrideAlternatives") == "1")); 

	if($(this).attr("from") && $(this).attr("to"))
	{
		$('#from').val($(this).attr("from"));
		$('#to').val($(this).attr("to"));
		$('#timeSpan').prop('checked',true);
	}
	else
		$('#timeSpan').prop('checked',false);


	if($(this).attr("after") && $(this).attr("before"))
	{
		
		var _i=parseInt($(this).attr("after"));
		var _date = new Date(_i*1000);
		var _dt = $.datepicker.formatDate('dd.mm.yy', _date);
		$('#after').val(_dt);

		_i=parseInt($(this).attr("before"));
		_date = new Date(_i*1000);
		_dt = $.datepicker.formatDate('dd.mm.yy', _date);
		$('#before').val(_dt);
		$('#timeFrame').prop('checked',true);
	}
	else
		$('#timeFrame').prop('checked',false);


	if($(this).attr("offset"))
	{
		var fields = $(this).attr("offset").split(',');
		var _b = fields[0];
		var _a = fields[1];
		if (_a) {
			$('#oafter').val(_a);
		} else
			$('#oafter').val(_b);
		$('#obefore').val(_b);
		$('#timerOffset').prop('checked',true);
	}
	else
		$('#timerOffset').prop('checked',false);
	
	if($(this).attr("maxduration")) {
		$('#maxduration').val($(this).attr("maxduration"));
		$('#maxDuration').prop('checked',true);
	}
	else
		$('#maxDuration').prop('checked',false);

	var _ae = $(this).find('afterevent');
	
	$('#timeSpanAE').prop('checked',false);
	$('#afterevent').val("");
	if(_ae.text())
	{
		$('#afterevent').val(_ae.text());
		if(_ae.attr("from") && _ae.attr("to"))
		{
			$('#aefrom').val(_ae.attr("from"));
			$('#aeto').val(_ae.attr("to"));
			$('#timeSpanAE').prop('checked',true);
		}
	}

	if($(this).attr("location")) {
		$('#location').val($(this).attr("location"));
		$('#Location').prop('checked',true);
	}
	else
		$('#Location').prop('checked',false);

	val="0";
	if($(this).attr("avoidDuplicateDescription"))
		val=$(this).attr("avoidDuplicateDescription")

	$("#avoidDuplicateDescription").val(val);

			
		}
	});


	checkValues ();

	// TODO: fill values from atxml
	// TODO: fill default values if not set in xml

}

#end raw

</script>


